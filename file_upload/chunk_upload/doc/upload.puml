@startuml

title UploadFile

skinparam ParticipantPadding 80
skinparam BoxPadding 10

participant "UploadRequest" as UploadRequest #APPLICATION

box "FileUploadDetail" #C7D7D8
participant "FindUploadRecord" as FindUploadRecord #BUSINESS
participant "InsertOneRecord" as InsertOneRecord #BUSINESS
participant "UpdateFileDetail" as UpdateFileDetail #BUSINESS
end box

box "LocalFile" #C7D7D8
participant "ChunkFile" as ChunkFile #BUSINESS
end box

autonumber "0."

' below flow would ignor trival check;e.g. query param check
UploadRequest -> FindUploadRecord : [Request]\n check file on-going upload chunk status
activate UploadRequest #F5DDAD


activate FindUploadRecord #CFDD8E
autonumber stop
FindUploadRecord -[#blue]-> UploadRequest : [IsUpload not 0]\n return upload response.\n 1(success), 2(on-going), -1(failed)
autonumber resume
activate FindUploadRecord #F5DDAD
FindUploadRecord -> InsertOneRecord : insert one record into FileUploadDetail
deactivate FindUploadRecord
deactivate FindUploadRecord

activate InsertOneRecord #CFDD8E
autonumber stop
InsertOneRecord  -[#red]-> UploadRequest : [Insert record error]\n return upload response -1
autonumber resume
activate InsertOneRecord #F5DDAD
InsertOneRecord --> ChunkFile : Write chunk to local file
deactivate InsertOneRecord
deactivate InsertOneRecord

activate ChunkFile #CFDD8E
autonumber stop
ChunkFile -[#red]-> UploadRequest : [Write chunk fail]\n return upload response -1
autonumber resume
activate ChunkFile #F5DDAD
ChunkFile --> UpdateFileDetail : update chunk file detail
deactivate ChunkFile
deactivate ChunkFile

activate UpdateFileDetail #CFDD8E
UpdateFileDetail --> UploadRequest : [Success/Fail]\n return upload response.\n 1(success), -1(fail)

deactivate UploadRequest

@enduml